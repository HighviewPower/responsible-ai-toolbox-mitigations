name: Release raimitigations to Pypi

# trigger manually ("collaborator" or above permissions should be required)
on:
  workflow_dispatch:
    inputs:
      releaseType:
        type: choice
        description: "Test or Prod PyPi"
        options:
          - Test
          - Prod
        required: true
      bumpType:
        type: choice
        description: "Part of version number to bump"
        options:
          - major
          - minor
          - revision
          - none
        required: true
        default: 'minor'

jobs:
  release-pypi:
    runs-on: ubuntu-latest
    steps:
      # -------------------
      # Checkout code
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      # -------------------
      # Setup environment in remote runner
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # -------------------
      # Install basic packages (not associated with the repo)
      - name: update and upgrade pip, setuptools, wheel and twine
        run: |
           pip install --upgrade pip
           pip install --upgrade setuptools wheel twine pip-tools
           pip install bump2version

      # -------------------
      # Install the package and all its dependencies
      - name: Install current package
        run: |
          pip install -e .
          pip list

      # -------------------
      # Run tests before uploading to PyPi
      - name: run tests
        run: pytest

      # -------------------
      # Update the package version by bumping the version to the next
      # > Major update (from 0.0.1 to 1.0.0)
      - name: Bump major version
        if: ${{ github.event.inputs.bumpType == 'major' }}
        run: |
          bumpversion --allow-dirty major

      # > Minor update (from 0.0.1 to 0.1.0)
      - name: Bump minor version
        if: ${{ github.event.inputs.bumpType == 'minor' }}
        run: |
          bumpversion --allow-dirty minor

      # > Patch or revision (from 0.0.1 to 0.0.2)
      - name: Bump revision version
        if: ${{ github.event.inputs.bumpType == 'revision' }}
        run: |
          bumpversion --allow-dirty patch

      # -------------------
      # Build wheel
      - name: build wheel
        run: python setup.py sdist bdist_wheel

      # -------------------
      # Publish package to PyPi as ...
      # ...a Test package (in test.pypi.org)
      - name: Publish package to Test Pypi
        if: ${{ github.event.inputs.releaseType == 'Test'}}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      # ...an official pip package
      - name: Publish package to Pypi
        if: ${{ github.event.inputs.releaseType == 'Prod'}}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

      # -------------------
      # Commit the changes performed by bump2version
      - name: commit new setup file
        if: ${{ github.event.inputs.bumpType != 'none' }}
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add setup.cfg .bumpversion.cfg
          git commit -m "update version number"

      # -------------------
      # Push the changes performed by bump2version to the current branch
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}



