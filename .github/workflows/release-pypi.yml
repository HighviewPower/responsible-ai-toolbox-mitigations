name: Release raimitigations to Pypi

# trigger manually ("collaborator" or above permissions should be required)
on:
  workflow_dispatch: 
    inputs:
      releaseType:
        type: choice
        description: "Test or Prod PyPi"
        options:
          - Test
          - Prod
        required: true
      bumpType:
        type: choice
        description: "Part of version number to bump"
        options:
          - major
          - minor
          - revision
          - none
        required: true
        default: 'minor'

jobs: 
  release-pypi:
    runs-on: ubuntu-latest
    steps:
       
       # build wheel 
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
          
      - name: update and upgrade pip, setuptools, wheel and twine
        run: |
           python -m pip install --upgrade pip
           pip install --upgrade setuptools wheel twine pip-tools bump
       
      - name: Pip compile
        run: |
          pip-compile requirements.in
          cat requirements.txt
          pip-sync requirements.txt
           
      - name: Install current package
        run: |
          pip install -v .
          
      # update the package version by bumping the minor version to the next
      - name: Bump minor version
        if: ${{ github.event.inputs.bumpType == 'minor' }}
        run: |
          bump --minor --reset
          
      - name: Bump major version
        if: ${{ github.event.inputs.bumpType == 'major' }}
        run: |
          bump --major --reset
      
      - name: Bump revision version
        if: ${{ github.event.inputs.bumpType == 'revision' }}
        run: |
          bump
          
      #commit the bumped version and push to repo 
      - name: commit new setup file
        if: ${{ github.event.inputs.bumpType != 'none' }}
        run: |
          git add setup.py
          git commit -m "update version number"
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }} 
       
      - name: build wheel
        run: python setup.py sdist bdist_wheel
         
        # run tests before uploading to PyPi
      - name: run tests
        run: pytest test/databalanceanalysis/.
        
        # publish to Test or Normal PyPi
      - name: Publish package to Test Pypi
        if: ${{ github.event.inputs.releaseType == 'Test'}}
        uses: pypa/gh-action-pypi-publish@release/v1
        with: 
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
     
      - name: Publish package to Pypi
        if: ${{ github.event.inputs.releaseType == 'Prod'}}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
            

         
